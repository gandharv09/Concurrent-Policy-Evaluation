import traceback
class Database(process):
    def setup(configFile:str):
        output("Database started with config file ",configFile)
	self.attributeStore['subjects']=dict()
	self.attributeStore['resources']=dict()
	if loadConfig(configFile):
		# failed to load the config file
		output("Failed to load data from the config file")
		
    def loadConfig(preInitConfigFile):

        if not os.path.exists(preInitConfigFile):
            output("Database preInit Config file %s not found"%preInitConfigFile)
            return -1
        try:
            preConfigData=json.loads(open(preInitConfigFile).read())

            for subjects in preConfigData.get("subjects"):

                self.attributeStore['subjects'][subjects.get('name')]=dict()
                for k,v in subjects.items():
                    self.attributeStore['subjects'][subjects.get('name')][k]=v
            for resources in preConfigData.get('resources'):
                self.attributeStore['resources'][resources.get('name')]=dict()
                for k,v in resources.items():
                    self.attributeStore['resources'][resources.get('name')][k]=v
            return 0

        except:
            output("Json file not in correct syntax")
	    output("STACK TRACE")
            print(traceback.print_exc())
            return -1

    def run():
        pass

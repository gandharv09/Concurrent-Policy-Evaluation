import os,sys,traceback,json,random

try:
    database = import_da("database")
    coordinator = import_da("coordinator")
    client = import_da("client")
    
except ImportError:
    output("Failed to import class files")

class Init(process):
    def setup():
        pass
    def initProcesses(numCoordinator, numWorkerPerCoordinator,tcId):
        try:
            coordinators=new(coordinator.Coordinator,num = numCoordinator )

            clients=new(client.Client)
            db =new(database.Database)

            if len(sys.argv) < 3:
                # improper arguments
                output("Improper Arguments")
                return -1
            objectCoordMap = dict()
            objectCoordMap["movieA"] = random.randint(0,numCoordinator -1)
            objectCoordMap["customerA"] = random.randint(0, numCoordinator -1) 
            objectCoordMap["customerB"] = random.randint(0, numCoordinator -1) 
            
            dbLoad = sys.argv[1]
            args = []
            args.append(dbLoad)
            setup(db,args)
            output("DbEmulator process set up")
           
            setup(coordinators, (numWorkerPerCoordinator, list(coordinators), db, objectCoordMap,tcId))
            output("Coordinators have been setup")
            
            setup(clients, (list(coordinators), sys.argv[2], objectCoordMap))
            output("Client process has been set up")

            # now we need to start all the processes in the system
            start(clients)
            start(coordinators)
            start(db)
            output("Started all processes")
            return 0
        except :
            output("STACK TRACE")
            output(traceback.print_exc())
            return -1

    def run():
        
            if not os.path.exists(sys.argv[2]):
                output("Config file %s does not exist."%sys.argv[2])
                sys.exit(-1)
            configData=json.loads(open(sys.argv[2]).read())
            numCoordinator=configData.get('globalConfig').get('numCoordinators')
            numWorkerPerCoordinator = configData.get('globalConfig').get('numWorkerPerCoordinator')
            tcId = configData.get('globalConfig').get('tcId')
            if initProcesses(int(numCoordinator),int(numWorkerPerCoordinator),int(tcId)):
                output("Failed to setup the environment")
                sys.exit(-1)

def main():
    init = new(Init)
    setup(init,())
    start(init)
    
    try:
        while True:
            pass
    except KeyboardInterrupt:
        output("SYSTEM EXITING")
        sys.exit(-1)
